주제선정 및 기획안, User table 작성 - 원석님

게시판 - post 한영님
- 구현한 점 : home.html 및 Post  (view , list)등 css
             글 작성 부분 CKEditor 적용
             카카오 맵 API 적용
             조회수(viewcount 증가 기능) - 글 작성자 본인이면 증가하지 않음
             작성자면 게시글 수정 삭제 가능


댓글 - comment 서혁님
  Spring Boot와 MyBatis, JSP, AJAX를 활용하여 구현한 댓글(Comment) 기능
  사용자 경험을 고려한 동적 UI와 RESTful API 구조를 통해, 게시글에 대한 댓글 작성, 조회, 수정, 삭제는 물론, 좋아요 및 대댓글 기능까지 포괄하는 직관적인 댓글 시스템 구현

- 구현한 점 : 댓글 CRUD 기능 : 게시글에 댓글을 작성하고, 조회하며, 자신이 작성한 댓글을 수정하거나 삭제 가능
             REST + AJAX 이용한 댓글 기능 : RESTful API를 사용하고 AJAX를 통해 페이지 새로고침 없이 댓글 기능이 동작하도록 구현
             좋아요 기능 : 댓글에 대해 좋아요를 누르거나 취소할 수 있으며, 해당 기능은 비동기로 즉시 반영
             대댓글 기능 :  댓글에는 답글을 작성할 수 있으며, parent_id를 기준으로 계층 구조가 유지
             게시글 목록에서 댓글이 몇 개 있는지 표시 : 게시글 목록 화면에서 각 게시글에 달린 댓글 수가 표시되어 댓글 수 쉽게 확인
             권한 기반 수정/삭제: 로그인한 사용자만 댓글을 작성할 수 있고, 작성자 본인만 해당 댓글을 수정하거나 삭제
             공유 DB 설정 : Railway와 같은 외부 공유 데이터베이스를 사용하여 팀 단위 협업이 가능하도록 설정

#  댓글 시스템 - Comment

Spring Boot, MyBatis, JSP, AJAX를 활용하여 구현한 댓글(Comment) 기능입니다.  
사용자 경험을 고려한 동적 UI와 RESTful API 구조를 통해, 게시글에 대한 댓글 작성, 조회, 수정, 삭제는 물론, 좋아요 및 대댓글 기능까지 포괄하는 직관적인 댓글 시스템을 구현했습니다.

---

##  구현한 기능

- **댓글 CRUD 기능**  
  게시글에 댓글을 작성하고, 조회하며, 자신이 작성한 댓글을 수정하거나 삭제할 수 있습니다.

- **REST + AJAX 기반 댓글 처리**  
  RESTful API와 AJAX를 통해, 페이지 새로고침 없이 댓글 기능이 동작합니다.

- **좋아요 기능**  
  댓글에 대해 좋아요를 누르거나 취소할 수 있으며, AJAX로 비동기 반영됩니다.

- **대댓글 기능 (답글)**  
  댓글에는 대댓글을 작성할 수 있으며, `parent_id`를 기준으로 계층 구조를 유지합니다.

- **댓글 수 표시**  
  게시글 목록에서 각 게시글에 달린 댓글 수가 표시되어 한눈에 파악할 수 있습니다.

- **권한 기반 수정/삭제**  
  로그인한 사용자만 댓글을 작성할 수 있고, 작성자 본인만 해당 댓글을 수정하거나 삭제할 수 있습니다.

- **공유 DB 설정**  
  Railway와 같은 외부 공유 데이터베이스를 사용하여 팀 단위 협업이 가능하도록 구성하였습니다.

---

##  기능 상세 설명

###  댓글 작성/조회/수정/삭제
- 로그인한 사용자만 가능  
- 본인 댓글만 수정/삭제 가능  
- 삭제 시, 자식 댓글(대댓글)도 함께 **소프트 삭제** 처리됨  

###  좋아요 기능
- AJAX 기반의 좋아요 토글  
- 중복 좋아요 방지 처리  
- 비로그인 사용자는 좋아요 불가  

### 대댓글 (답글)
- `parent_id` 필드를 기준으로 댓글의 계층형 구조 유지  
- 트리 형태의 대댓글 구조를 지원  

### 인증 및 권한
- 세션 기반 로그인 확인  
- 댓글 작성/수정/삭제 권한 체크  
- **관리자**는 모든 댓글 삭제 가능  

---

## 기술 스택

- **백엔드**: Spring Boot, MyBatis  
- **프론트엔드**: JSP, AJAX  
- **DB**: MySQL (Railway 사용)  
- **API 스타일**: RESTful  

---



파일 - file 소연님
- 구현한 점 : 파일 업로드 기능
             파일 다운로드 기능
             파일 업로드한 첫번째 이미지가 썸네일 기능 구현

페이지 - pagination / search - 지선님
- 구현한 점 : 검색창 및 검색 기능 구현
             Suggest 기능(자동완성) 구현
             Ajax를 활용한 pagination 기능 구현

관리자 - admin 준서님
- 구현한 점 : Spring Security 적용
             관리자 페이지 css
             관리자 로그인시 관리자 대시보드로 이동
             관리자시 파일, 게시판, 댓글, 회원관리 수정 삭제 기능
